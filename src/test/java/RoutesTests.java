import io.qameta.allure.Feature;
import io.qameta.allure.Owner;
import io.qameta.allure.Story;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static io.qameta.allure.Allure.step;

@Owner("jadulya")
@Feature("Маршруты")
public class RoutesTests {
    @Test
    @Story("Модалка создания/редактирования маршрута (верстка)")
    @DisplayName("Поиск")
    public void checkSearchTest() {
        step("Предусловие: зайти в модалку создания/редактирования маршрута", () -> {
        });
        step("Поиск осуществляется по городам", () -> {
        });
        step("Поиск осуществляется по ПВЗ", () -> {
        });
    }
    @Test
    @Story("Модалка создания/редактирования маршрута (верстка)")
    @DisplayName("Проверка чек боксов")
    public void checkCheckBoxesTest() {
        step("Предусловие: найти город, нажать на него и проверить, что справа отобразился список ПВЗ", () -> {
        });
        step("Чек-бокс невыбранного города белый и активный", () -> {
        });
        step("Чек-бокс города, ПВЗ которого выбраны частично, красный с белой горизонтальной полоской", () -> {
        });
        step("При нажатии на чек-бокс с белой полоской происходит 'довыбор' всех не выбранных ПВЗ со "
                + "всеми типами доставки", () -> {
        });
        step("При нажатии на чек-бокс с белой галочкой происходит отмена выбора всех ПВЗ со всеми типами "
                + "доставки", () -> {
        });
        step("При нажатии на полностью белый чек-бокс происходит выбор всех ПВЗ города со всеми типами доставки",
                () -> {
        });
        step("При нажатии на неактивный чек-бокс города или ПВЗ ничего не происходит", () -> {
        });
    }

    @Test
    @Story("Модалка создания/редактирования маршрута (верстка)")
    @DisplayName("Блок ПВЗ")
    public void checkPvzBlockTest() {
        step("Предусловие: в модалке создания/редактирования маршрута привязать ПВЗ к маршруту", () ->{
        });
        step("При нажатии на знак вопроса в блоке с ПВЗ появляется текстовая подсказка", () -> {
        });
        step("В блоке с ПВЗ для уже привязанных к маршрутам ПВЗ в чек-боксах выводятся цифры - номера маршрутов, "
                + "к которым они привязаны", () -> {
        });
    }

    @Test
    @Story("Модалка создания/редактирования маршрута (верстка)")
    @DisplayName("Сохранение изменений")
    public void checkSaveChangesTest() {
        step("Предусловие: в модалке создания/редактирования маршрута добавить изменения в маршруте", () ->{
        });
        step("При нажатии на область вне модалки или на крестик появляется предупреждение о том, "
                + "что изменения не будут сохранены.", () -> {
        });
        step("Если в модалке нажать 'да', изменения не сохранятся. Если 'нет' - модалка останется открытой",
                () -> {
        });
        step("Кнопка 'Сохранить' сохраняет все примененные изменения", () -> {
        });
    }

}
